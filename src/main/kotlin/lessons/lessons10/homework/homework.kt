package lessons.lessons10.homework


fun main() {
    // ----Задачи на работу со словарём-----
    // 1. Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.
    val a1 = mapOf<Int, Int>()
    // 2. Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double
    val a2 = mapOf(1.354f to 3.14)
    // 3. Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.
    val a3 = mutableMapOf<Int, String>(1 to "Red", 2 to "Black")
    // 4. Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".
    a3[3] = "Blue"
    // 5. Используя словарь из предыдущего задания, извлеките значение, используя ключ.
    // Попробуй получить значение с ключом, которого в словаре нет.
    if (3 in a3) println(a3[3])
    if (4 in a3) println(a3[4])
    else println("Ключ не найден")
    // 6. Удалите определенный элемент из изменяемого словаря по его ключу.
    a3.remove(3)
    // 7. Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение.
    // Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)
    val a4 = mapOf<Double, Int>(3.14 to 10, 5.56 to 20, 6.34 to 0)
    for ((firstValue, secondValue) in a4) {
        if (secondValue == 0) {
            println("Деление на ноль невозможно")
            continue
        }
        val res = firstValue / secondValue
        println(res)

    }

    // 8. Измените значение для существующего ключа в изменяемом словаре.
    a3[1] = "Green"

    // 9. Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.
    val a5 = mapOf<Int, String>(1 to "Lisa", 2 to "John")
    val a6 = mapOf<Int, String>(3 to "Maria", 4 to "Alex")

    val a7 = mutableMapOf<Int, String>()
    for ((key, value) in a5) {
        a7[key] = value
    }
    for ((key, value) in a6) {
        a7[key] = value
    }
    println(a7)

    // 10. Создайте словарь, где ключами являются строки, а значениями - списки целых чисел.
    // Добавьте несколько элементов в этот словарь.

    val a8 = mapOf<String, List<Int>>("Луна" to listOf(1, 2, 3))

    // 11. Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк. Добавь данные в словарь.
    // Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку. Распечатай полученное множество.

    val a9 = mutableMapOf<Int, MutableSet<String>>(1 to mutableSetOf("Kotlin", "Java"))
    if (1 in a9) println(a9[1])
    a9[1]?.add("Python")
    if (1 in a9) println(a9[1])

    // 12. Создай словарь, где ключами будут пары чисел.
    // Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.

    val a10 = mapOf<Pair<Int, Int>, String>((1 to 5) to "First", (5 to 10) to "Second", (10 to 20) to "Third")
    for ((key, value) in a10) {
        if (key.first == 5 || key.second == 5) {
            println("$key в $value")
        }
    }

    // ----Задачи на подбор оптимального типа для словаря----

    // Словарь библиотека: Ключи - автор книги, значения - список книг
    val library = mutableMapOf<String, MutableList<String>>()
    //  Справочник растений: Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений
    val listPlant = mapOf<List<String>, MutableList<String>>()
    // Четвертьфинала: Ключи - названия спортивных команд, значения - списки игроков каждой команды
    val quaterFinal = mapOf<String, List<String>>()
    // Курс лечения: Ключи - даты, значения - список препаратов принимаемых в дату
    val healthCheck = mapOf<String, List<String>>()
    // Словарь путешественника: Ключи - страны, значения - словари из городов со списком интересных мест.
    val travelList = mutableMapOf<String, MutableMap<String, List<String>>>()
}